apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: casf-demo-template
  title: CASF Demo template
  description: Demonstrate the possibilities with Backstage
  tags:
    - casf
    - templates
spec:
  owner: backstage-admins
  type: website
  parameters:
    - title: Select Cloud Managed OS parameters
      required:
        - size
        - os
        - name
        - admin
      properties:
        size:
          title: Size
          type: string
          description: What size do you want?
          enum:
            - Large
            - Medium
            - Small
        os:
          title: Operating System
          type: string
          description: What OS do you want?
          enum: 
            - RHEL8
            - RHEL7
            - Ubuntu 20.04
            - Ubuntu 18.04.6
        name:
          title: Server name
          type: string
          description: What name do you want for your server?            
        admin:
          title: Admin
          type: string
          description: Admin of the server
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - User
    - title: Select software you want installed?
      required:
        - webserver
      properties:
        webserver:
          title: Webserver
          type: string
          description: Select what webserver you want installed
          enum:
            - Apache HTTP Server
            - lighttpd
            - Nginx
    - title: Set up DNS and FW for your server
      required:
      properties:
        dns:
          title: DNS
          type: string
          description: Set the DNS you want?
        firewall1:
          title: Firewall openings
          type: string
          description: Where do you want the server accesable from?
          enum:
            - Internal VPN
            - External VPN
            - Internet
        firewall2:
          title: Firewall openings
          type: string
          description: Where do you want the server accesable from?
          enum:
            - Internal VPN
            - External VPN
            - Internet
    - title: Provide some information about your website
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the website
          ui:field: EntityNamePicker
          ui:autofocus: true
          ui:options:
            rows: 5
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the site
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Your repository location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - telia-company
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com/telia-company
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        # repoVisibility, when not specified on GitHub, defaults to "private"
        # possible values:
        #   - public
        #   - internal
        #   - private
        repoVisibility: internal
        collaborators: 
          - team: ${{ parameters.owner }}
            access: admin

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
